// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(uuid())
  email       String   @unique
  password    String
  name        String
  isPremium   Boolean  @default(false)
  isAdmin     Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  transactions Transaction[]
  budgets     Budget[]
  
  @@map("users")
}

model Transaction {
  id            String                   @id @default(uuid())
  name          String
  type          TransactionType
  amount        Decimal                  @db.Decimal(10, 2)
  category      TransactionCategory
  paymentMethod TransactionPaymentMethod
  date          DateTime
  createdAt     DateTime                 @default(now())
  updatedAt     DateTime                 @updatedAt
  installments  Int                      @default(1)

  isRecurring   Boolean                  @default(false) // Para marcar se é uma despesa recorrente
  endDate       DateTime?                // Data de fim para transações recorrentes ou parceladas


  
  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@map("transactions")
}

model Budget {
  id        String   @id @default(uuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  category  TransactionCategory // A categoria para a qual o orçamento se aplica
  amount    Decimal  @db.Decimal(10, 2) // O valor limite do orçamento
  month     Int      // O mês (1-12)
  year      Int      // O ano

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId, category, month, year]) // Garante que só existe um orçamento por categoria/mês/ano para cada utilizador
  @@map("budgets")
}

enum TransactionType {
  DEPOSIT
  EXPENSE
  INVESTMENT
}

enum TransactionCategory {
  HOUSING
  TRANSPORTATION
  FOOD
  ENTERTAINMENT
  HEALTH
  UTILITY
  SALARY
  EDUCATION
  OTHER
  ACOES
  CDB
  CDI
  CRIPTO
  FUNDOS
  RFIXA
  POUPANCA
  TDIRETO
}

enum TransactionPaymentMethod {
  CREDIT_CARD
  DEBIT_CARD
  BANK_TRANSFER
  BANK_SLIP
  CASH
  PIX
  OTHER
}